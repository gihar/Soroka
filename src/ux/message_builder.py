"""
–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∫—Ä–∞—Å–∏–≤—ã—Ö –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
"""

from typing import Dict, List, Any, Optional
from datetime import datetime
from dataclasses import dataclass
from src.utils.message_utils import escape_markdown_v2


@dataclass
class MessageStyle:
    """–°—Ç–∏–ª—å —Å–æ–æ–±—â–µ–Ω–∏—è"""
    emoji: str
    title: str
    color: str = "info"  # info, success, warning, error


class MessageBuilder:
    """–°—Ç—Ä–æ–∏—Ç–µ–ª—å –∫—Ä–∞—Å–∏–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    
    # –°—Ç–∏–ª–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π
    STYLES = {
        "welcome": MessageStyle("ü§ñ", "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!", "info"),
        "processing": MessageStyle("üîÑ", "–û–±—Ä–∞–±–æ—Ç–∫–∞", "info"),
        "success": MessageStyle("‚úÖ", "–£—Å–ø–µ—à–Ω–æ", "success"),
        "error": MessageStyle("‚ùå", "–û—à–∏–±–∫–∞", "error"),
        "warning": MessageStyle("‚ö†Ô∏è", "–í–Ω–∏–º–∞–Ω–∏–µ", "warning"),
        "info": MessageStyle("‚ÑπÔ∏è", "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "info"),
        "help": MessageStyle("‚ùì", "–°–ø—Ä–∞–≤–∫–∞", "info"),
        "settings": MessageStyle("‚öôÔ∏è", "–ù–∞—Å—Ç—Ä–æ–π–∫–∏", "info"),
        "templates": MessageStyle("üìù", "–®–∞–±–ª–æ–Ω—ã", "info"),
        "stats": MessageStyle("üìä", "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "info"),
    }
    
    @classmethod
    def welcome_message(cls) -> str:
        """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
        return (
            "ü§ñ **–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤ –≤—Å—Ç—Ä–µ—á!**\n\n"
            "üìã **–ß—Ç–æ —è —É–º–µ—é:**\n"
            "‚Ä¢ üéµ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∞—É–¥–∏–æ –∑–∞–ø–∏—Å–∏ –≤—Å—Ç—Ä–µ—á\n"
            "‚Ä¢ üé¨ –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤–∏–¥–µ–æ —Ñ–∞–π–ª—ã\n"
            "‚Ä¢ üë• –û–ø—Ä–µ–¥–µ–ª—è—Ç—å –≥–æ–≤–æ—Ä—è—â–∏—Ö\n"
            "‚Ä¢ üìù –°–æ–∑–¥–∞–≤–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ç–æ–∫–æ–ª—ã\n"
            "‚Ä¢ üé® –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≥–æ—Ç–æ–≤—ã–µ –∏ –∫–∞—Å—Ç–æ–º–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã\n\n"
            "üöÄ **–ö–∞–∫ –Ω–∞—á–∞—Ç—å:**\n"
            "1. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∞—É–¥–∏–æ –∏–ª–∏ –≤–∏–¥–µ–æ —Ñ–∞–π–ª, –ª–∏–±–æ —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–∞–π–ª\n"
            "2. –í—ã–±–µ—Ä–∏—Ç–µ —à–∞–±–ª–æ–Ω –ø—Ä–æ—Ç–æ–∫–æ–ª–∞\n"
            "3. –ü–æ–ª—É—á–∏—Ç–µ –≥–æ—Ç–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç!\n\n"
            "üí° **–ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**\n"
            "‚Ä¢ /help - –ø–æ–¥—Ä–æ–±–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞\n"
            "‚Ä¢ /templates - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞–º–∏\n"
            "‚Ä¢ /settings - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ò–ò\n\n"
            "üì§ **–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å!**"
        )
    
    @classmethod
    def help_message(cls) -> str:
        """–ü–æ–¥—Ä–æ–±–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞"""
        return (
            "üÜò **–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞**\n\n"
            
            "üì± **–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã:**\n"
            "üéµ –ê—É–¥–∏–æ: MP3, WAV, M4A, OGG, FLAC\n"
            "üé¨ –í–∏–¥–µ–æ: MP4, AVI, MOV, MKV, WebM\n"
            "üé§ –ì–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –≤–∏–¥–µ–æ–∑–∞–º–µ—Ç–∫–∏\n\n"
            
            "‚ö° **–ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç:**\n"
            "1. üì§ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª\n"
            "2. üìù –í—ã–±–µ—Ä–∏—Ç–µ —à–∞–±–ª–æ–Ω (–∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–≤—Ç–æ–≤—ã–±–æ—Ä)\n"
            "3. ü§ñ –í—ã–±–µ—Ä–∏—Ç–µ –ò–ò (–∏–ª–∏ –æ—Å—Ç–∞–≤—å—Ç–µ –∞–≤—Ç–æ–≤—ã–±–æ—Ä)\n"
            "4. üìã –ü–æ–ª—É—á–∏—Ç–µ –≥–æ—Ç–æ–≤—ã–π –ø—Ä–æ—Ç–æ–∫–æ–ª!\n\n"
            
            "üìù **–®–∞–±–ª–æ–Ω—ã –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤:**\n"
            "‚Ä¢ –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã: —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π, –¥–µ–ª–æ–≤–æ–π, —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –≤—Å—Ç—Ä–µ—á–∞ –∏ –¥—Ä.\n"
            "‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–±–æ—Ä –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ —à–∞–±–ª–æ–Ω–∞ –ø–æ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—é\n"
            "‚Ä¢ –°–æ–∑–¥–∞–≤–∞–π—Ç–µ —Å–≤–æ–∏ —à–∞–±–ª–æ–Ω—ã —á–µ—Ä–µ–∑ /templates\n\n"
            
            "‚öôÔ∏è **–ù–∞—Å—Ç—Ä–æ–π–∫–∏:**\n"
            "‚Ä¢ /settings - –≤—ã–±–æ—Ä –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º–æ–≥–æ –ò–ò\n"
            "‚Ä¢ /templates - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞–º–∏\n\n"
            
            "üîí **–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:**\n"
            "‚Ä¢ –ú–∞–∫—Å. —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: 20MB\n"
            "‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: –¥–æ 60 –º–∏–Ω—É—Ç\n"
            "‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ—Ç —Ñ–∞–π–ª—ã\n\n"
            
            "‚ùì **–í–æ–ø—Ä–æ—Å—ã?** –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª –∏ —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º!"
        )
    
    @classmethod
    def error_message(cls, error_type: str, details: str = "", 
                     suggestions: Optional[List[str]] = None) -> str:
        """–°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏"""
        message = f"‚ùå **–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞**\n\n"
        
        # –¢–∏–ø –æ—à–∏–±–∫–∏
        error_types = {
            "file_size": "–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –ª–∏–º–∏—Ç",
            "file_format": "–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞", 
            "processing": "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞",
            "network": "–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –∏–ª–∏ —Å–µ—Ä–≤–∏—Å–∞",
            "validation": "–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö",
            "permission": "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤",
            "rate_limit": "–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤",
            "service_unavailable": "–°–µ—Ä–≤–∏—Å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        }
        
        error_title = error_types.get(error_type, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞")
        message += f"**–¢–∏–ø:** {error_title}\n"
        
        if details:
            message += f"**–î–µ—Ç–∞–ª–∏:** {details}\n"
        
        message += "\n"
        
        # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ç–∏–ø—É –æ—à–∏–±–∫–∏
        if not suggestions:
            suggestions = cls._get_default_suggestions(error_type)
        
        if suggestions:
            message += "üí° **–ß—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:**\n"
            for suggestion in suggestions:
                message += f"‚Ä¢ {suggestion}\n"
            message += "\n"
        
        message += "üîÑ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∑–∞ –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥–æ–π /help"
        
        return message
    
    @classmethod
    def _get_default_suggestions(cls, error_type: str) -> List[str]:
        """–ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ç–∏–ø—É –æ—à–∏–±–∫–∏"""
        suggestions_map = {
            "file_size": [
                "–°–∂–º–∏—Ç–µ —Ñ–∞–π–ª –∏–ª–∏ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ –Ω–∞ —á–∞—Å—Ç–∏",
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç —Å –ª—É—á—à–∏–º —Å–∂–∞—Ç–∏–µ–º (MP3 –≤–º–µ—Å—Ç–æ WAV)",
                "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 20MB"
            ],
            "file_format": [
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã: MP3, WAV, M4A, MP4",
                "–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª –≤ –æ–¥–∏–Ω –∏–∑ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤",
                "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª –∫–∞–∫ –¥–æ–∫—É–º–µ–Ω—Ç, –µ—Å–ª–∏ –∫–∞–∫ –º–µ–¥–∏–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
            ],
            "processing": [
                "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ –∞—É–¥–∏–æ (—á–µ—Ç–∫–æ—Å—Ç—å —Ä–µ—á–∏)",
                "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª –Ω–µ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω",
                "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª –ø–æ–≤—Ç–æ—Ä–Ω–æ"
            ],
            "network": [
                "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ",
                "–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç",
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥—Ä—É–≥—É—é —Å–µ—Ç—å –µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ"
            ],
            "rate_limit": [
                "–ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–æ–π",
                "–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ —Ñ–∞–π–ª—ã –ø–æ –æ–¥–Ω–æ–º—É",
                "–ò–∑–±–µ–≥–∞–π—Ç–µ —á–∞—Å—Ç—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤"
            ],
            "service_unavailable": [
                "–°–µ—Ä–≤–∏—Å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω",
                "–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É —á–µ—Ä–µ–∑ 10-15 –º–∏–Ω—É—Ç",
                "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã –∫–æ–º–∞–Ω–¥–æ–π /status"
            ]
        }
        
        return suggestions_map.get(error_type, [
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç",
            "–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∑–∞ –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥–æ–π /help"
        ])
    
    @classmethod
    def processing_complete_message(cls, result: Dict[str, Any]) -> str:
        """–°–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏"""
        message = "üéâ **–ü—Ä–æ—Ç–æ–∫–æ–ª —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!**\n\n"
        
        # –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        message += "üìã **–†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏:**\n"
        
        if result.get("template_used"):
            template_name = result["template_used"].get("name", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π")
            template_name = escape_markdown_v2(template_name)
            message += f"üìù –®–∞–±–ª–æ–Ω: {template_name}\n"
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á–µ–ª–æ–≤–µ–∫–æ—á–∏—Ç–∞–µ–º–æ–µ –∏–º—è –º–æ–¥–µ–ª–∏, –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ
        if result.get("llm_model_name") or result.get("llm_model_used") or result.get("llm_provider_used"):
            ai_name = result.get("llm_model_name") or result.get("llm_model_used") or result.get("llm_provider_used")
            ai_name = escape_markdown_v2(ai_name)
            message += f"ü§ñ –ò–ò: {ai_name}\n"
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏ (—Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º –¥–ª–∏–Ω—ã)
        if result.get("transcription_result"):
            transcription = result["transcription_result"]
            if transcription.get("transcription"):
                char_count = len(transcription["transcription"])
                word_count = len(transcription["transcription"].split())
                message += f"üìÑ –¢–µ–∫—Å—Ç: {char_count} —Å–∏–º–≤–æ–ª–æ–≤, ~{word_count} —Å–ª–æ–≤\n"
            
            # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∂–∞—Ç–∏–∏ —Ñ–∞–π–ª–∞ (–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ –±—ã–ª–æ –ø–æ–∫–∞–∑–∞–Ω–æ —Ä–∞–Ω–µ–µ)
            if transcription.get("compression_info"):
                compression = transcription["compression_info"]
                if compression.get("compressed", False) and not compression.get("shown_during_processing", False):
                    original_mb = compression.get("original_size_mb", 0)
                    compressed_mb = compression.get("compressed_size_mb", 0)
                    ratio = compression.get("compression_ratio", 0)
                    saved_mb = compression.get("compression_saved_mb", 0)
                    
                    message += f"üóúÔ∏è –°–∂–∞—Ç–∏–µ: {original_mb:.1f}MB ‚Üí {compressed_mb:.1f}MB (—ç–∫–æ–Ω–æ–º–∏—è {ratio:.1f}%, -{saved_mb:.1f}MB)\n"
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        speaker_mapping = result.get("speaker_mapping", {})
        if speaker_mapping:
            message += "\nüë• **–£—á–∞—Å—Ç–Ω–∏–∫–∏:**\n"
            # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ speaker_id –¥–ª—è –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ–≥–æ –ø–æ—Ä—è–¥–∫–∞
            sorted_mapping = sorted(speaker_mapping.items())
            for speaker_id, participant_name in sorted_mapping:
                speaker_id_escaped = escape_markdown_v2(speaker_id)
                participant_name_escaped = escape_markdown_v2(participant_name)
                message += f"‚Ä¢ {speaker_id_escaped} ‚Üí {participant_name_escaped}\n"
        elif result.get("transcription_result", {}).get("diarization"):
            # –ï—Å–ª–∏ –Ω–µ—Ç —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ —Å–ø–∏–∫–µ—Ä–æ–≤
            diarization = result["transcription_result"]["diarization"]
            speakers_count = diarization.get("total_speakers", 0)
            if speakers_count > 1:
                message += f"\nüë• –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {speakers_count}\n"
        
        message += "\n"
        
        # –í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
        if result.get("processing_duration"):
            duration = result["processing_duration"]
            message += f"‚è±Ô∏è –í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: {duration:.1f} —Å–µ–∫\n"
        
        message += "\nüìÑ **–ü—Ä–æ—Ç–æ–∫–æ–ª –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –Ω–∏–∂–µ...**"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –ª–∏–º–∏—Ç Telegram
        if len(message) > 4000:  # –û—Å—Ç–∞–≤–ª—è–µ–º –∑–∞–ø–∞—Å –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
            # –°–æ–∑–¥–∞–µ–º —Å–æ–∫—Ä–∞—â–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é
            message = "üéâ **–ü—Ä–æ—Ç–æ–∫–æ–ª —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!**\n\n"
            message += "üìã **–†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏:**\n"
            
            if result.get("template_used"):
                template_name = result["template_used"].get("name", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π")
                template_name = escape_markdown_v2(template_name)
                message += f"üìù –®–∞–±–ª–æ–Ω: {template_name}\n"
            
            if result.get("llm_model_name") or result.get("llm_model_used") or result.get("llm_provider_used"):
                ai_name = result.get("llm_model_name") or result.get("llm_model_used") or result.get("llm_provider_used")
                ai_name = escape_markdown_v2(ai_name)
                message += f"ü§ñ –ò–ò: {ai_name}\n"
            
            if result.get("transcription_result", {}).get("transcription"):
                char_count = len(result["transcription_result"]["transcription"])
                word_count = len(result["transcription_result"]["transcription"].split())
                message += f"üìÑ –¢–µ–∫—Å—Ç: {char_count} —Å–∏–º–≤–æ–ª–æ–≤, ~{word_count} —Å–ª–æ–≤\n"
            
            # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∂–∞—Ç–∏–∏ —Ñ–∞–π–ª–∞ (—Å–æ–∫—Ä–∞—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
            if result.get("transcription_result", {}).get("compression_info"):
                compression = result["transcription_result"]["compression_info"]
                if compression.get("compressed", False):
                    original_mb = compression.get("original_size_mb", 0)
                    compressed_mb = compression.get("compressed_size_mb", 0)
                    ratio = compression.get("compression_ratio", 0)
                    message += f"üóúÔ∏è –°–∂–∞—Ç–∏–µ: {original_mb:.1f}MB ‚Üí {compressed_mb:.1f}MB ({ratio:.1f}%)\n"
            
            # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ (—Å–æ–∫—Ä–∞—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
            speaker_mapping = result.get("speaker_mapping", {})
            if speaker_mapping:
                message += "\nüë• **–£—á–∞—Å—Ç–Ω–∏–∫–∏:**\n"
                sorted_mapping = sorted(speaker_mapping.items())
                for speaker_id, participant_name in sorted_mapping:
                    speaker_id_escaped = escape_markdown_v2(speaker_id)
                    participant_name_escaped = escape_markdown_v2(participant_name)
                    message += f"‚Ä¢ {speaker_id_escaped} ‚Üí {participant_name_escaped}\n"
            elif result.get("transcription_result", {}).get("diarization"):
                diarization = result["transcription_result"]["diarization"]
                speakers_count = diarization.get("total_speakers", 0)
                if speakers_count > 1:
                    message += f"\nüë• –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {speakers_count}\n"
            
            message += "\n"
            
            if result.get("processing_duration"):
                duration = result["processing_duration"]
                message += f"‚è±Ô∏è –í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: {duration:.1f} —Å–µ–∫\n"
            
            message += "\nüìÑ **–ü—Ä–æ—Ç–æ–∫–æ–ª –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –Ω–∏–∂–µ...**"
        
        return message
    
    @classmethod
    def file_validation_error(cls, error_details: Dict[str, Any]) -> str:
        """–°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ñ–∞–π–ª–∞"""
        error_type = error_details.get("type", "unknown")
        
        if error_type == "size":
            actual_size = error_details.get("actual_size", 0)
            max_size = error_details.get("max_size", 20)
            actual_mb = actual_size / (1024 * 1024)
            
            return (
                f"üì¶ **–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π**\n\n"
                f"–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {actual_mb:.1f} MB\n"
                f"–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: {max_size} MB\n\n"
                f"üí° **–ß—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:**\n"
                f"‚Ä¢ –°–∂–∞—Ç—å —Ñ–∞–π–ª —Å –ø–æ–º–æ—â—å—é –ø—Ä–æ–≥—Ä–∞–º–º –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏\n"
                f"‚Ä¢ –†–∞–∑–¥–µ–ª–∏—Ç—å –∑–∞–ø–∏—Å—å –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ —á–∞—Å—Ç–µ–π\n"
                f"‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ–æ—Ä–º–∞—Ç —Å –ª—É—á—à–∏–º —Å–∂–∞—Ç–∏–µ–º (MP3)\n"
                f"‚Ä¢ –°–Ω–∏–∑–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ –∞—É–¥–∏–æ –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞\n"
                f"‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∂–∏–º–∞–µ—Ç —Ñ–∞–π–ª—ã –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏"
            )
        
        elif error_type == "format":
            file_ext = error_details.get("extension", "")
            supported_formats = error_details.get("supported_formats", [])
            
            return (
                f"üìÅ **–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞**\n\n"
                f"–§–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞: {file_ext}\n\n"
                f"‚úÖ **–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã:**\n"
                f"üéµ –ê—É–¥–∏–æ: {', '.join(supported_formats.get('audio', []))}\n"
                f"üé¨ –í–∏–¥–µ–æ: {', '.join(supported_formats.get('video', []))}\n\n"
                f"üí° **–ß—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:**\n"
                f"‚Ä¢ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª –≤ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç\n"
                f"‚Ä¢ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª –∫–∞–∫ –¥–æ–∫—É–º–µ–Ω—Ç\n"
                f"‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–Ω–ª–∞–π–Ω-–∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä—ã\n"
                f"‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∂–∏–º–∞–µ—Ç —Ñ–∞–π–ª—ã –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏"
            )
        
        return cls.error_message("validation", str(error_details))
    
    @classmethod
    def templates_help_message(cls) -> str:
        """–°–ø—Ä–∞–≤–∫–∞ –ø–æ —Ä–∞–±–æ—Ç–µ —Å —à–∞–±–ª–æ–Ω–∞–º–∏"""
        return (
            "üìù **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞–º–∏ –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤**\n\n"
            
            "üé® **–ß—Ç–æ —Ç–∞–∫–æ–µ —à–∞–±–ª–æ–Ω—ã?**\n"
            "–®–∞–±–ª–æ–Ω—ã –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –∏—Ç–æ–≥–æ–≤–æ–≥–æ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞. "
            "–í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≥–æ—Ç–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã –∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ.\n\n"
            
            "‚ú® **–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:**\n"
            "‚Ä¢ `{{ participants }}` - —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n"
            "‚Ä¢ `{{ agenda }}` - –ø–æ–≤–µ—Å—Ç–∫–∞ –¥–Ω—è\n"
            "‚Ä¢ `{{ discussion }}` - –æ—Å–Ω–æ–≤–Ω–æ–µ –æ–±—Å—É–∂–¥–µ–Ω–∏–µ\n"
            "‚Ä¢ `{{ decisions }}` - –ø—Ä–∏–Ω—è—Ç—ã–µ —Ä–µ—à–µ–Ω–∏—è\n"
            "‚Ä¢ `{{ tasks }}` - –∑–∞–¥–∞—á–∏ –∏ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–µ\n"
            "‚Ä¢ `{{ date }}` - –¥–∞—Ç–∞ –≤—Å—Ç—Ä–µ—á–∏\n"
            "‚Ä¢ `{{ time }}` - –≤—Ä–µ–º—è –≤—Å—Ç—Ä–µ—á–∏\n"
            "‚Ä¢ `{{ speakers_summary }}` - –∞–Ω–∞–ª–∏–∑ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n"
            "‚Ä¢ `{{ speaker_contributions }}` - –≤–∫–ª–∞–¥ –∫–∞–∂–¥–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞\n\n"
            
            "üîß **–°–æ–∑–¥–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞:**\n"
            "1. –ù–∞–∂–º–∏—Ç–µ \"‚ûï –î–æ–±–∞–≤–∏—Ç—å —à–∞–±–ª–æ–Ω\"\n"
            "2. –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ\n"
            "3. –°–æ–∑–¥–∞–π—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏\n"
            "4. –ü—Ä–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç\n"
            "5. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —à–∞–±–ª–æ–Ω\n\n"
            
            "üìã **–ü—Ä–∏–º–µ—Ä –ø—Ä–æ—Å—Ç–æ–≥–æ —à–∞–±–ª–æ–Ω–∞:**\n"
            "```\n"
            "# –ü—Ä–æ—Ç–æ–∫–æ–ª –≤—Å—Ç—Ä–µ—á–∏\n"
            "–î–∞—Ç–∞: {{ date }}\n"
            "–£—á–∞—Å—Ç–Ω–∏–∫–∏: {{ participants }}\n\n"
            "## –û–±—Å—É–∂–¥–µ–Ω–∏–µ\n"
            "{{ discussion }}\n\n"
            "## –†–µ—à–µ–Ω–∏—è\n"
            "{{ decisions }}\n"
            "```\n\n"
            
            "üí° **–°–æ–≤–µ—Ç—ã:**\n"
            "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Markdown –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\n"
            "‚Ä¢ –î–æ–±–∞–≤–ª—è–π—Ç–µ —ç–º–æ–¥–∑–∏ –¥–ª—è –Ω–∞–≥–ª—è–¥–Ω–æ—Å—Ç–∏\n"
            "‚Ä¢ –¢–µ—Å—Ç–∏—Ä—É–π—Ç–µ —à–∞–±–ª–æ–Ω—ã —Å –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–æ–º\n"
            "‚Ä¢ –°–æ–∑–¥–∞–≤–∞–π—Ç–µ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –≤—Å—Ç—Ä–µ—á"
        )
