"""
–£–ø—Ä–æ—â–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
"""

from typing import Dict, Any


class SimpleMessages:
    """–£–ø—Ä–æ—â–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ª—É—á—à–µ–≥–æ UX"""
    
    @staticmethod
    def processing_start() -> str:
        """–ù–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏"""
        return (
            "üîÑ **–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞ –Ω–∞—á–∞–ª–∞—Å—å**\n\n"
            "‚è≥ –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞—é —Ñ–∞–π–ª –∫ –æ–±—Ä–∞–±–æ—Ç–∫–µ..."
        )
    
    @staticmethod
    def processing_complete(duration: float) -> str:
        """–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏"""
        return (
            "‚úÖ **–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!**\n\n"
            f"‚è±Ô∏è –í—Ä–µ–º—è: {duration:.0f}—Å\n"
            "üìÑ –ü—Ä–æ—Ç–æ–∫–æ–ª –≥–æ—Ç–æ–≤ –∏ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∏–∂–µ."
        )
    
    @staticmethod
    def compression_optimized(original_mb: float, compressed_mb: float, ratio: float) -> str:
        """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Ñ–∞–π–ª–∞"""
        return (
            f"üóúÔ∏è **–§–∞–π–ª –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω!**\n\n"
            f"üìä –†–∞–∑–º–µ—Ä —É–º–µ–Ω—å—à–µ–Ω –Ω–∞ {ratio:.0f}%\n"
            f"({original_mb:.1f}MB ‚Üí {compressed_mb:.1f}MB)\n\n"
            f"üîÑ –ü—Ä–æ–¥–æ–ª–∂–∞—é –æ–±—Ä–∞–±–æ—Ç–∫—É..."
        )
    
    @staticmethod
    def error_generic(stage_name: str, error_message: str) -> str:
        """–û–±—â–∞—è –æ—à–∏–±–∫–∞"""
        return (
            f"‚ùå **–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ**\n\n"
            f"–≠—Ç–∞–ø: {stage_name}\n"
            f"–û—à–∏–±–∫–∞: {error_message}\n\n"
            f"–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª –µ—â–µ —Ä–∞–∑."
        )
    
    @staticmethod
    def error_file_too_large() -> str:
        """–û—à–∏–±–∫–∞ - —Ñ–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π"""
        return (
            "üì¶ **–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π**\n\n"
            "–°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–ø—ã—Ç–∞–µ—Ç—Å—è —Å–∂–∞—Ç—å —Ñ–∞–π–ª, "
            "–Ω–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:\n\n"
            "‚Ä¢ –°–∂–∞—Ç—å –∞—É–¥–∏–æ—Ñ–∞–π–ª –¥–æ –º–µ–Ω—å—à–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞\n"
            "‚Ä¢ –†–∞–∑–¥–µ–ª–∏—Ç—å –¥–ª–∏–Ω–Ω—É—é –∑–∞–ø–∏—Å—å –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ —á–∞—Å—Ç–µ–π\n"
            "‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ–æ—Ä–º–∞—Ç —Å –ª—É—á—à–∏–º —Å–∂–∞—Ç–∏–µ–º (MP3)"
        )
    
    @staticmethod
    def error_transcription() -> str:
        """–û—à–∏–±–∫–∞ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏"""
        return (
            "üé§ **–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏**\n\n"
            "–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –∞—É–¥–∏–æ –≤ —Ç–µ–∫—Å—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:\n\n"
            "‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ –∞—É–¥–∏–æ\n"
            "‚Ä¢ –£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ —Ä–µ—á—å —á–µ—Ç–∫–∞—è –∏ –±–µ–∑ —à—É–º–æ–≤\n"
            "‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ–∞–π–ª –º–µ–Ω—å—à–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞"
        )
    
    @staticmethod
    def error_message_too_long() -> str:
        """–û—à–∏–±–∫–∞ - —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ"""
        return (
            "üìÑ **–†–µ–∑—É–ª—å—Ç–∞—Ç —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π**\n\n"
            "–ü—Ä–æ—Ç–æ–∫–æ–ª –ø—Ä–µ–≤—ã—à–∞–µ—Ç –ª–∏–º–∏—Ç Telegram. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:\n\n"
            "‚Ä¢ –û–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ñ–∞–π–ª –º–µ–Ω—å—à–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞\n"
            "‚Ä¢ –†–∞–∑–¥–µ–ª–∏—Ç—å –¥–ª–∏–Ω–Ω—É—é –∑–∞–ø–∏—Å—å –Ω–∞ —á–∞—Å—Ç–∏\n"
            "‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ–ª–µ–µ –∫–æ—Ä–æ—Ç–∫–∏–π –∞—É–¥–∏–æ—Ñ–∞–π–ª"
        )
    
    @staticmethod
    def stage_preparation() -> str:
        """–≠—Ç–∞–ø –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏"""
        return "üìÅ –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞—é —Ñ–∞–π–ª –∫ –æ–±—Ä–∞–±–æ—Ç–∫–µ..."
    
    @staticmethod
    def stage_transcription() -> str:
        """–≠—Ç–∞–ø —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏"""
        return "üéØ –ü—Ä–µ–æ–±—Ä–∞–∑—É—é –∞—É–¥–∏–æ –≤ —Ç–µ–∫—Å—Ç..."
    
    @staticmethod
    def stage_analysis() -> str:
        """–≠—Ç–∞–ø –∞–Ω–∞–ª–∏–∑–∞"""
        return "ü§ñ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –∏ —Å–æ–∑–¥–∞—é –ø—Ä–æ—Ç–æ–∫–æ–ª..."
    
    @staticmethod
    def progress_bar() -> str:
        """–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä"""
        return "‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞"
    
    @staticmethod
    def format_progress_text(stages: Dict[str, Any], current_stage: str = None, 
                           total_elapsed: float = 0) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å–∞"""
        text = "üîÑ **–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞**\n\n"
        
        for stage_id, stage in stages.items():
            if stage.is_completed:
                text += f"‚úÖ {stage.emoji} {stage.name}\n"
            elif stage.is_active:
                progress_bar = SimpleMessages.progress_bar()
                text += f"üîÑ {stage.emoji} {stage.name} {progress_bar}\n"
                text += f"   _{stage.description}_\n"
            else:
                text += f"‚è≥ {stage.emoji} {stage.name}\n"
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Ä–µ–º—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø—Ä–æ—à–ª–æ –±–æ–ª—å—à–µ 10 —Å–µ–∫—É–Ω–¥
        if total_elapsed > 10:
            text += f"\n‚è±Ô∏è {total_elapsed:.0f}—Å"
        
        return text
