"""
–°–∏—Å—Ç–µ–º–∞ –±—ã—Å—Ç—Ä—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –∏ —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
"""

from typing import Dict, List, Any, Optional
from aiogram import Router, F
from aiogram.types import (
    Message, CallbackQuery, InlineKeyboardButton, 
    InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton
)
from aiogram.filters import Command
from loguru import logger


class QuickActionsUI:
    """–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±—ã—Å—Ç—Ä—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π"""
    
    @staticmethod
    def create_main_menu() -> ReplyKeyboardMarkup:
        """–°–æ–∑–¥–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –±—ã—Å—Ç—Ä—ã–º–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏"""
        keyboard = [
            [
                KeyboardButton(text="üì§ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª"),
                KeyboardButton(text="üìù –ú–æ–∏ —à–∞–±–ª–æ–Ω—ã")
            ],
            [
                KeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"),
                KeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
            ],
            [
                KeyboardButton(text="‚ùì –ü–æ–º–æ—â—å"),
                KeyboardButton(text="üí¨ –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å")
            ]
        ]
        
        return ReplyKeyboardMarkup(
            keyboard=keyboard,
            resize_keyboard=True,
            one_time_keyboard=False,
            input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª..."
        )
    
    @staticmethod
    def create_file_actions_menu() -> InlineKeyboardMarkup:
        """–ú–µ–Ω—é –¥–µ–π—Å—Ç–≤–∏–π —Å —Ñ–∞–π–ª–æ–º"""
        buttons = [
            [
                InlineKeyboardButton(
                    text="üöÄ –ë—ã—Å—Ç—Ä–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞",
                    callback_data="quick_process_default"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üé® –í—ã–±—Ä–∞—Ç—å —à–∞–±–ª–æ–Ω",
                    callback_data="select_template"
                ),
                InlineKeyboardButton(
                    text="ü§ñ –í—ã–±—Ä–∞—Ç—å –ò–ò",
                    callback_data="select_llm"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É",
                    callback_data="configure_processing"
                )
            ]
        ]
        
        return InlineKeyboardMarkup(inline_keyboard=buttons)
    
    @staticmethod
    def create_template_quick_menu() -> InlineKeyboardMarkup:
        """–ë—ã—Å—Ç—Ä–æ–µ –º–µ–Ω—é —à–∞–±–ª–æ–Ω–æ–≤"""
        buttons = [
            [
                InlineKeyboardButton(
                    text="üìã –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø—Ä–æ—Ç–æ–∫–æ–ª",
                    callback_data="quick_template_standard"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üíº –î–µ–ª–æ–≤–∞—è –≤—Å—Ç—Ä–µ—á–∞",
                    callback_data="quick_template_business"
                ),
                InlineKeyboardButton(
                    text="üéì –£—á–µ–±–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ",
                    callback_data="quick_template_education"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üî¨ –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ",
                    callback_data="quick_template_research"
                ),
                InlineKeyboardButton(
                    text="üéØ –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ",
                    callback_data="quick_template_planning"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üìù –í—Å–µ —à–∞–±–ª–æ–Ω—ã",
                    callback_data="view_all_templates"
                ),
                InlineKeyboardButton(
                    text="‚ûï –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π",
                    callback_data="create_template"
                )
            ]
        ]
        
        return InlineKeyboardMarkup(inline_keyboard=buttons)
    
    @staticmethod
    def create_settings_menu() -> InlineKeyboardMarkup:
        """–ú–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        buttons = [
            [
                InlineKeyboardButton(
                    text="ü§ñ –ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–π –ò–ò",
                    callback_data="settings_preferred_llm"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üë• –î–∏–∞—Ä–∏–∑–∞—Ü–∏—è",
                    callback_data="settings_diarization"
                ),
                InlineKeyboardButton(
                    text="üéµ –ö–∞—á–µ—Å—Ç–≤–æ –∞—É–¥–∏–æ",
                    callback_data="settings_audio_quality"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üìù –®–∞–±–ª–æ–Ω –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é",
                    callback_data="settings_default_template"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üîÑ –°–±—Ä–æ—Å–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏",
                    callback_data="settings_reset"
                )
            ]
        ]
        
        return InlineKeyboardMarkup(inline_keyboard=buttons)


class CommandShortcuts:
    """–°–∏—Å—Ç–µ–º–∞ —Å–æ–∫—Ä–∞—â–µ–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥"""
    
    # –ê–ª–∏–∞—Å—ã –∫–æ–º–∞–Ω–¥
    COMMAND_ALIASES = {
        "t": "templates",      # /t -> /templates
        "s": "settings",       # /s -> /settings
        "h": "help",          # /h -> /help
        "st": "status",       # /st -> /status
        "fb": "feedback",     # /fb -> /feedback
        "q": "quick"          # /q -> /quick
    }
    
    @staticmethod
    def get_command_help() -> str:
        """–ü–æ–ª—É—á–∏—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –±—ã—Å—Ç—Ä—ã–º –∫–æ–º–∞–Ω–¥–∞–º"""
        return (
            "‚ö° **–ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã**\n\n"
            "üî§ **–°–æ–∫—Ä–∞—â–µ–Ω–∏—è:**\n"
            "‚Ä¢ `/t` ‚Üí `/templates` - —à–∞–±–ª–æ–Ω—ã\n"
            "‚Ä¢ `/s` ‚Üí `/settings` - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏\n"
            "‚Ä¢ `/h` ‚Üí `/help` - –ø–æ–º–æ—â—å\n"
            "‚Ä¢ `/st` ‚Üí `/status` - —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã\n"
            "‚Ä¢ `/fb` ‚Üí `/feedback` - –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å\n"
            "‚Ä¢ `/q` ‚Üí `/quick` - –±—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è\n\n"
            
            "‚ö° **–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:**\n"
            "‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª + –Ω–∞–∂–º–∏—Ç–µ \"üöÄ –ë—ã—Å—Ç—Ä–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞\"\n"
            "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏\n"
            "‚Ä¢ –ö–æ–º–∞–Ω–¥–∞ `/quick` –¥–ª—è –ø–∞–Ω–µ–ª–∏ –±—ã—Å—Ç—Ä—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π\n\n"
            
            "üéØ **–ü—Ä–æ—Ñ–∏–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏:**\n"
            "‚Ä¢ `/quick meeting` - –±—ã—Å—Ç—Ä–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å—Ç—Ä–µ—á–∏\n"
            "‚Ä¢ `/quick lecture` - –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ª–µ–∫—Ü–∏–∏\n"
            "‚Ä¢ `/quick interview` - –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω—Ç–µ—Ä–≤—å—é\n\n"
            
            "üí° **–ü–æ–¥—Å–∫–∞–∑–∫–∞:** –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –≤–º–µ—Å—Ç–æ –∫–æ–º–∞–Ω–¥!"
        )


def setup_quick_actions_handlers() -> Router:
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –±—ã—Å—Ç—Ä—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π"""
    router = Router()
    
    @router.message(Command("quick"))
    async def quick_command_handler(message: Message):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /quick"""
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∞—Ä–≥—É–º–µ–Ω—Ç—ã
        command_parts = message.text.split()
        
        if len(command_parts) > 1:
            action = command_parts[1].lower()
            
            # –ë—ã—Å—Ç—Ä—ã–µ –ø—Ä–æ—Ñ–∏–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏
            if action == "meeting":
                await message.answer(
                    "üè¢ **–ü—Ä–æ—Ñ–∏–ª—å: –î–µ–ª–æ–≤–∞—è –≤—Å—Ç—Ä–µ—á–∞**\n\n"
                    "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∞—É–¥–∏–æ –∏–ª–∏ –≤–∏–¥–µ–æ —Ñ–∞–π–ª –≤—Å—Ç—Ä–µ—á–∏.\n"
                    "–ë—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω —à–∞–±–ª–æ–Ω –¥–ª—è –¥–µ–ª–æ–≤—ã—Ö –≤—Å—Ç—Ä–µ—á —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.",
                    reply_markup=QuickActionsUI.create_main_menu()
                )
            elif action == "lecture":
                await message.answer(
                    "üéì **–ü—Ä–æ—Ñ–∏–ª—å: –õ–µ–∫—Ü–∏—è/–°–µ–º–∏–Ω–∞—Ä**\n\n"
                    "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∑–∞–ø–∏—Å—å —É—á–µ–±–Ω–æ–≥–æ –∑–∞–Ω—è—Ç–∏—è.\n"
                    "–ë—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –∫–æ–Ω—Å–ø–µ–∫—Ç —Å –≤—ã–¥–µ–ª–µ–Ω–∏–µ–º –∫–ª—é—á–µ–≤—ã—Ö –º–æ–º–µ–Ω—Ç–æ–≤.",
                    reply_markup=QuickActionsUI.create_main_menu()
                )
            elif action == "interview":
                await message.answer(
                    "üé§ **–ü—Ä–æ—Ñ–∏–ª—å: –ò–Ω—Ç–µ—Ä–≤—å—é**\n\n"
                    "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∑–∞–ø–∏—Å—å –∏–Ω—Ç–µ—Ä–≤—å—é.\n"
                    "–ë—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∞ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è —Å —É–∫–∞–∑–∞–Ω–∏–µ–º —Ä–æ–ª–µ–π —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.",
                    reply_markup=QuickActionsUI.create_main_menu()
                )
            else:
                await message.answer(
                    f"‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å: {action}\n\n"
                    f"–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª–∏: meeting, lecture, interview"
                )
        else:
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–∞–Ω–µ–ª—å –±—ã—Å—Ç—Ä—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
            keyboard = QuickActionsUI.create_file_actions_menu()
            await message.answer(
                "‚ö° **–ü–∞–Ω–µ–ª—å –±—ã—Å—Ç—Ä—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π**\n\n"
                "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏:",
                reply_markup=keyboard
            )
    
    @router.message(F.text == "üì§ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª")
    async def upload_file_button_handler(message: Message):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞"""
        await message.answer(
            "üì§ **–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞**\n\n"
            "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∞—É–¥–∏–æ –∏–ª–∏ –≤–∏–¥–µ–æ —Ñ–∞–π–ª –ª—é–±—ã–º —Å–ø–æ—Å–æ–±–æ–º:\n"
            "‚Ä¢ üéµ –ö–∞–∫ –∞—É–¥–∏–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
            "‚Ä¢ üé¨ –ö–∞–∫ –≤–∏–¥–µ–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
            "‚Ä¢ üìé –ö–∞–∫ –¥–æ–∫—É–º–µ–Ω—Ç\n"
            "‚Ä¢ üé§ –ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n\n"
            "üí° –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 20MB"
        )
    
    @router.message(F.text == "üìù –ú–æ–∏ —à–∞–±–ª–æ–Ω—ã")
    async def my_templates_button_handler(message: Message):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ —à–∞–±–ª–æ–Ω–æ–≤"""
        keyboard = QuickActionsUI.create_template_quick_menu()
        await message.answer(
            "üìù **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞–º–∏**\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ç–æ–≤—ã–π —à–∞–±–ª–æ–Ω –∏–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π:",
            reply_markup=keyboard
        )
    
    @router.message(F.text == "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
    async def settings_button_handler(message: Message):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        keyboard = QuickActionsUI.create_settings_menu()
        await message.answer(
            "‚öôÔ∏è **–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞**\n\n"
            "–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –±–æ—Ç–∞ –ø–æ–¥ –≤–∞—à–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è:",
            reply_markup=keyboard
        )
    
    @router.message(F.text == "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
    async def stats_button_handler(message: Message):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –∑–∞–ø—Ä–æ—Å–∏–ª —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
        try:
            from database import db
            from reliability.middleware import monitoring_middleware
            from reliability.health_check import health_checker
            from datetime import datetime, timedelta
            
            # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            user_stats = await db.get_user_stats(message.from_user.id)
            
            # –ü–æ–ª—É—á–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            system_stats = monitoring_middleware.get_stats()
            
            if user_stats:
                # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –ª–∏—á–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
                total_files = user_stats.get('total_files', 0)
                active_days = user_stats.get('active_days', 0)
                favorite_templates = user_stats.get('favorite_templates', [])
                llm_providers = user_stats.get('llm_providers', [])
                
                # –°—Ç—Ä–æ–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                stats_text = f"üìä **–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞**\n\n"
                stats_text += f"üîÑ **–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤:** {total_files}\n"
                stats_text += f"üìÖ **–ê–∫—Ç–∏–≤–Ω—ã—Ö –¥–Ω–µ–π:** {active_days}\n"
                
                if user_stats.get('first_file_date'):
                    try:
                        first_date = datetime.fromisoformat(user_stats['first_file_date'].replace('Z', '+00:00'))
                        days_since_first = (datetime.now() - first_date.replace(tzinfo=None)).days
                        stats_text += f"üéØ **–î–Ω–µ–π —Å –Ω–∞—á–∞–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:** {days_since_first}\n"
                    except:
                        pass
                
                # –õ—é–±–∏–º—ã–µ —à–∞–±–ª–æ–Ω—ã
                if favorite_templates:
                    stats_text += f"\nüìù **–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã:**\n"
                    for template in favorite_templates[:3]:
                        stats_text += f"‚Ä¢ {template['name']}: {template['count']} —Ä–∞–∑\n"
                
                # LLM –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã
                if llm_providers:
                    stats_text += f"\nü§ñ **–ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ AI –º–æ–¥–µ–ª–∏:**\n"
                    for provider in llm_providers[:3]:
                        provider_name = provider['llm_provider'].title() if provider['llm_provider'] else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'
                        stats_text += f"‚Ä¢ {provider_name}: {provider['count']} —Ä–∞–∑\n"
                
                # –°–∏—Å—Ç–µ–º–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
                stats_text += f"\nüåê **–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã:**\n"
                stats_text += f"‚Ä¢ –í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤: {system_stats.get('total_requests', 0)}\n"
                stats_text += f"‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {system_stats.get('active_users', 0)}\n"
                stats_text += f"‚Ä¢ –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: {system_stats.get('average_processing_time', 0):.2f}—Å\n"
                
                if system_stats.get('error_rate', 0) > 0:
                    stats_text += f"‚Ä¢ –ü—Ä–æ—Ü–µ–Ω—Ç –æ—à–∏–±–æ–∫: {system_stats.get('error_rate', 0):.1f}%\n"
                else:
                    stats_text += f"‚Ä¢ ‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ\n"
                
            else:
                # –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
                stats_text = f"üìä **–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!**\n\n"
                stats_text += f"üîÑ **–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤:** 0\n"
                stats_text += f"üìÖ **–ê–∫—Ç–∏–≤–Ω—ã—Ö –¥–Ω–µ–π:** 0\n\n"
                stats_text += f"üöÄ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –ø–µ—Ä–≤—ã–π —Ñ–∞–π–ª –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏!\n\n"
                
                # –°–∏—Å—Ç–µ–º–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                stats_text += f"üåê **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã:**\n"
                stats_text += f"‚Ä¢ –í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤: {system_stats.get('total_requests', 0)}\n"
                stats_text += f"‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {system_stats.get('active_users', 0)}\n"
                stats_text += f"‚Ä¢ –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: {system_stats.get('average_processing_time', 0):.2f}—Å\n"
            
            await message.answer(stats_text, parse_mode="Markdown")
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
            await message.answer(
                "üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞**\n\n"
                "‚ùå –í—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞.\n"
                "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.",
                parse_mode="Markdown"
            )
    
    @router.message(F.text == "‚ùì –ü–æ–º–æ—â—å")
    async def help_button_handler(message: Message):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ø–æ–º–æ—â–∏"""
        from ux.message_builder import MessageBuilder
        help_text = MessageBuilder.help_message()
        await message.answer(help_text, parse_mode="Markdown")
    
    @router.message(F.text == "üí¨ –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å")
    async def feedback_button_handler(message: Message):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏"""
        from ux.feedback_system import FeedbackUI
        keyboard = FeedbackUI.create_feedback_type_keyboard()
        await message.answer(
            "üí¨ **–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å**\n\n"
            "–ü–æ–º–æ–≥–∏—Ç–µ –Ω–∞–º —Å—Ç–∞—Ç—å –ª—É—á—à–µ! –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏:",
            reply_markup=keyboard,
            parse_mode="Markdown"
        )
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –±—ã—Å—Ç—Ä—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π —Å —Ñ–∞–π–ª–∞–º–∏
    @router.callback_query(F.data == "quick_process_default")
    async def quick_process_default_handler(callback: CallbackQuery):
        """–ë—ã—Å—Ç—Ä–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"""
        await callback.message.edit_text(
            "üöÄ **–ë—ã—Å—Ç—Ä–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞**\n\n"
            "–ë—É–¥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é:\n"
            "‚Ä¢ üìù –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —à–∞–±–ª–æ–Ω –ø—Ä–æ—Ç–æ–∫–æ–ª–∞\n"
            "‚Ä¢ ü§ñ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–±–æ—Ä –ò–ò\n"
            "‚Ä¢ üë• –î–∏–∞—Ä–∏–∑–∞—Ü–∏—è –≤–∫–ª—é—á–µ–Ω–∞\n\n"
            "‚è≥ –ù–∞—á–∏–Ω–∞—é –æ–±—Ä–∞–±–æ—Ç–∫—É..."
        )
        # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –≤—ã–∑–æ–≤ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    
    @router.callback_query(F.data.startswith("quick_template_"))
    async def quick_template_handler(callback: CallbackQuery):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –±—ã—Å—Ç—Ä–æ–≥–æ –≤—ã–±–æ—Ä–∞ —à–∞–±–ª–æ–Ω–∞"""
        template_type = callback.data.split("_")[-1]
        
        template_names = {
            "standard": "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø—Ä–æ—Ç–æ–∫–æ–ª –≤—Å—Ç—Ä–µ—á–∏",
            "business": "–î–µ–ª–æ–≤–∞—è –≤—Å—Ç—Ä–µ—á–∞",
            "education": "–£—á–µ–±–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ",
            "research": "–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è —Ä–∞–±–æ—Ç–∞",
            "planning": "–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞"
        }
        
        template_name = template_names.get(template_type, "–í—ã–±—Ä–∞–Ω–Ω—ã–π —à–∞–±–ª–æ–Ω")
        
        await callback.message.edit_text(
            f"üìù **–í—ã–±—Ä–∞–Ω —à–∞–±–ª–æ–Ω:** {template_name}\n\n"
            f"–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –ò–ò –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏."
        )
    
    # –ö–æ–º–∞–Ω–¥—ã-–∞–ª–∏–∞—Å—ã
    for alias, original in CommandShortcuts.COMMAND_ALIASES.items():
        @router.message(Command(alias))
        async def alias_handler(message: Message, command=original):
            """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥-–∞–ª–∏–∞—Å–æ–≤"""
            await message.answer(
                f"‚Ü™Ô∏è –í—ã–ø–æ–ª–Ω—è—é –∫–æ–º–∞–Ω–¥—É `/{command}`",
                parse_mode="Markdown"
            )
            # –ó–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤—ã–∑–æ–≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
    
    return router


class UserGuidance:
    """–°–∏—Å—Ç–µ–º–∞ –ø–æ–¥—Å–∫–∞–∑–æ–∫ –∏ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    
    @staticmethod
    def get_contextual_help(context: str) -> str:
        """–ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—É—é –ø–æ–º–æ—â—å"""
        help_texts = {
            "file_upload": (
                "üì§ **–ö–∞–∫ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª:**\n\n"
                "1. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–∫—Ä–µ–ø–∫—É üìé –≤ Telegram\n"
                "2. –í—ã–±–µ—Ä–∏—Ç–µ \"–§–∞–π–ª\" –∏–ª–∏ \"–ú–µ–¥–∏–∞\"\n"
                "3. –ù–∞–π–¥–∏—Ç–µ –≤–∞—à –∞—É–¥–∏–æ/–≤–∏–¥–µ–æ —Ñ–∞–π–ª\n"
                "4. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª –±–æ—Ç—É\n\n"
                "üí° –ú–æ–∂–Ω–æ —Ç–∞–∫–∂–µ:\n"
                "‚Ä¢ –ó–∞–ø–∏—Å–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ üé§\n"
                "‚Ä¢ –ó–∞–ø–∏—Å–∞—Ç—å –≤–∏–¥–µ–æ-—Å–æ–æ–±—â–µ–Ω–∏–µ üìπ\n"
                "‚Ä¢ –ü–µ—Ä–µ—Å–ª–∞—Ç—å —Ñ–∞–π–ª –∏–∑ –¥—Ä—É–≥–æ–≥–æ —á–∞—Ç–∞"
            ),
            "template_creation": (
                "üìù **–°–æ–∑–¥–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞:**\n\n"
                "1. –ù–∞–∂–º–∏—Ç–µ \"‚ûï –î–æ–±–∞–≤–∏—Ç—å —à–∞–±–ª–æ–Ω\"\n"
                "2. –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä: \"–ü–ª–∞–Ω–µ—Ä–∫–∞\")\n"
                "3. –î–æ–±–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ\n"
                "4. –°–æ–∑–¥–∞–π—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏\n"
                "5. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä\n"
                "6. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —à–∞–±–ª–æ–Ω\n\n"
                "üîß **–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:**\n"
                "‚Ä¢ {{participants}} - —É—á–∞—Å—Ç–Ω–∏–∫–∏\n"
                "‚Ä¢ {{agenda}} - –ø–æ–≤–µ—Å—Ç–∫–∞\n"
                "‚Ä¢ {{decisions}} - —Ä–µ—à–µ–Ω–∏—è"
            ),
            "troubleshooting": (
                "üîß **–†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º:**\n\n"
                "‚ùå **–§–∞–π–ª –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è:**\n"
                "‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–∑–º–µ—Ä (–º–∞–∫—Å. 20MB)\n"
                "‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫–µ —Ñ–æ—Ä–º–∞—Ç–∞\n"
                "‚Ä¢ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–∞–∫ –¥–æ–∫—É–º–µ–Ω—Ç\n\n"
                "üêå **–ú–µ–¥–ª–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞:**\n"
                "‚Ä¢ –ë–æ–ª—å—à–∏–µ —Ñ–∞–π–ª—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –¥–æ–ª—å—à–µ\n"
                "‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ\n"
                "‚Ä¢ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤ –¥—Ä—É–≥–æ–µ –≤—Ä–µ–º—è\n\n"
                "ü§ñ **–ü–ª–æ—Ö–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞:**\n"
                "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–∞–π–ª—ã —Å —á–µ—Ç–∫–æ–π —Ä–µ—á—å—é\n"
                "‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —à–∞–±–ª–æ–Ω\n"
                "‚Ä¢ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –ò–ò-–ø—Ä–æ–≤–∞–π–¥–µ—Ä"
            )
        }
        
        return help_texts.get(context, "‚ùì –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
    
    @staticmethod
    def get_onboarding_steps() -> List[str]:
        """–ü–æ–ª—É—á–∏—Ç—å —à–∞–≥–∏ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞ –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
        return [
            "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –≠—Ç–æ –±–æ—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤ –≤—Å—Ç—Ä–µ—á",
            "üì§ –ü–µ—Ä–≤—ã–π —à–∞–≥: –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∞—É–¥–∏–æ –∏–ª–∏ –≤–∏–¥–µ–æ —Ñ–∞–π–ª –≤—Å—Ç—Ä–µ—á–∏",
            "üìù –í—Ç–æ—Ä–æ–π —à–∞–≥: –≤—ã–±–µ—Ä–∏—Ç–µ —à–∞–±–ª–æ–Ω –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ –∏–∑ —Å–ø–∏—Å–∫–∞",
            "ü§ñ –¢—Ä–µ—Ç–∏–π —à–∞–≥: –≤—ã–±–µ—Ä–∏—Ç–µ –ò–ò –∏–ª–∏ –æ—Å—Ç–∞–≤—å—Ç–µ –∞–≤—Ç–æ–≤—ã–±–æ—Ä",
            "‚è≥ –î–æ–∂–¥–∏—Ç–µ—Å—å –æ–±—Ä–∞–±–æ—Ç–∫–∏ - —ç—Ç–æ –∑–∞–π–º–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç",
            "üìã –ü–æ–ª—É—á–∏—Ç–µ –≥–æ—Ç–æ–≤—ã–π –ø—Ä–æ—Ç–æ–∫–æ–ª –≤ —É–¥–æ–±–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ!",
            "üí° –°–æ–≤–µ—Ç: —Å–æ–∑–¥–∞–π—Ç–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã –≤ —Ä–∞–∑–¥–µ–ª–µ /templates"
        ]
